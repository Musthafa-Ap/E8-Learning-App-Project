import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart';
import 'package:nuox_project/pages/featured/sections/notifications_section/notification_model.dart';
import 'package:nuox_project/pages/featured/services/featured_section/sorted_course_model.dart';
import 'package:nuox_project/pages/featured/widgets/no_course_found_page.dart';
import 'package:nuox_project/pages/featured/widgets/see_all_page_featured.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'featured_model.dart';

class FeaturedProvider with ChangeNotifier {
  NotificationModel? notificationList;
  bool? isCourseNotFound;
  SortedCourseModel? sortedCourses;
  List<Autogenerated?> auto = [];
  bool isLoading = false;
  Future<void> sample() async {
    isLoading = true;
    Response response = await get(
        Uri.parse("http://learningapp.e8demo.com/api/featured-course/"));
    if (response.statusCode == 200) {
      var data = jsonDecode(response.body);
      auto = (data['data'] as List)
          .map((e) => Autogenerated.fromJson(
                e,
              ))
          .toList();
    }
    isLoading = false;
    notifyListeners();
  }

  Future<void> getSortedCourses(
      {String? catagoryID,
      required String minPrice,
      required String maxPrice,
      required context}) async {
    try {
      Response response = await get(Uri.parse(catagoryID == null
          ? "http://learningapp.e8demo.com/api/course_filter/?min_price=$minPrice&max_price=$maxPrice&cate_id="
          : "http://learningapp.e8demo.com/api/course_filter/?min_price=$minPrice&max_price=$maxPrice&cate_id=$catagoryID"));

      var data = jsonDecode(response.body);
      if (response.statusCode == 200) {
        sortedCourses = SortedCourseModel.fromJson(data);
        Navigator.of(context).pushReplacement(
          MaterialPageRoute(builder: (context) => const SeeAllPageFeatured()),
        );
      } else {
        isCourseNotFound = true;
        Navigator.of(context).pushReplacement(
          MaterialPageRoute(builder: (context) => const NoCourseFoundPage()),
        );
      }
    } catch (e) {
      print(e.toString());
    }
  }

  void getNotifications() async {
    try {
      SharedPreferences shared = await SharedPreferences.getInstance();
      var token = shared.getString("access_token");
      String auth = "Bearer $token";
      print(auth);
      var api = "http://learningapp.e8demo.com/api/notification/";
      Response response =
          await get(Uri.parse(api), headers: {"Authorization": auth});
      Map<String, dynamic> data = jsonDecode(response.body);
      if (response.statusCode == 200) {
        notificationList = NotificationModel.fromJson(data);
        notifyListeners();
      }
    } catch (e) {
      print(e.toString());
    }
  }
}
