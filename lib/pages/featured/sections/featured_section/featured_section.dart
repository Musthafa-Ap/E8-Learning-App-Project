import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

import '../../../../constants/constants.dart';
import '../../../../widgets/bold_heading.dart';
import '../../../../widgets/see_all_widget.dart';
import '../../../course_detailed_page/recomendations_services/recomendations_provider.dart';
import '../../services/featured_section/featured_model.dart';
import '../../services/featured_section/featured_provider.dart';
import '../../widgets/see_all_page_featured.dart';
import '../../widgets/small_item_card.dart';

class FeaturedSection extends StatelessWidget {
  const FeaturedSection({super.key});

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size.width;
    final featuredProvider = Provider.of<FeaturedProvider>(context);
    return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
      kHeight15,
      Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          const BoldHeading(
            heading: "Featured",
          ),
          GestureDetector(
            child: const SeeAllWidget(),
            onTap: () async {
              Provider.of<FeaturedProvider>(context, listen: false)
                  .sortedCourses = null;
              await Provider.of<RecomendationsProvider>(context, listen: false)
                  .getAll();
              featuredProvider.samples();
              Navigator.of(context).push(MaterialPageRoute(
                  builder: (context) => SeeAllPageFeatured()));
            },
          ),
        ],
      ),
      featuredProvider.isLoading == true
          ? const Center(child: CircularProgressIndicator())
          : SizedBox(
              height: size * .60,
              child: SingleChildScrollView(
                physics: const BouncingScrollPhysics(),
                scrollDirection: Axis.horizontal,
                child: Row(
                  children: [
                    ListView.builder(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      itemCount: 3,
                      scrollDirection: Axis.horizontal,
                      itemBuilder: (context, index) {
                        final Autogenerated? data =
                            featuredProvider.auto[index];
                        return SmallItemCard(
                          refresh: true,
                          id: data?.id,
                          isWishlist: data?.isWishList,
                          rating: data?.rating?.toDouble(),
                          image: data?.thumbnail?.full_size.toString(),
                          authorName: data?.instructor?.name.toString(),
                          courseName: data?.courseName.toString(),
                          coursePrice: data?.price,
                          ratingCount: data?.ratingCount,
                          isBestSeller: data?.bestSeller,
                        );
                      },
                    ),
                    // kWidth30,
                    // GestureDetector(
                    //   child: const SeeAllWidget(),
                    //   onTap: () async {
                    //     Provider.of<FeaturedProvider>(context, listen: false)
                    //         .sortedCourses = null;
                    //     await Provider.of<RecomendationsProvider>(context,
                    //             listen: false)
                    //         .getAll();
                    //     featuredProvider.samples();
                    //     Navigator.of(context).push(MaterialPageRoute(
                    //         builder: (context) => SeeAllPageFeatured()));
                    //   },
                    // ),
                    // kWidth30
                  ],
                ),
              ),
            ),
    ]);
  }
}
